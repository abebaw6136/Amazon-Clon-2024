{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Local Admin\\\\Desktop\\\\amazon\\\\Amazon-Clon-2024\\\\amzon-clon-2024\\\\src\\\\Pages\\\\ProductDetail\\\\ProductDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { productUrl } from '../../Api/endPoints'; // Adjust the path as necessary\nimport ProductCard from '../../Components/Product/ProductCard';\nimport Loader from '../../Components/Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductDetail() {\n  _s();\n  const {\n    productId\n  } = useParams(); // Get product ID from URL\n  const [product, setProduct] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProduct = async () => {\n      setIsLoading(true);\n      try {\n        const response = await axios.get(`${productUrl}/products/${productId}`);\n        setProduct(response.data);\n      } catch (err) {\n        console.error(\"Error fetching product:\", err);\n        setError(\"Failed to fetch product details.\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchProduct();\n  }, [productId]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n  if (!product) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Product not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ProductCard, {\n    product: product\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(ProductDetail, \"niewJzvuDlIi03iCQXmI4P6T8kQ=\", false, function () {\n  return [useParams];\n});\n_c = ProductDetail;\nexport default ProductDetail;\nvar _c;\n$RefreshReg$(_c, \"ProductDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","productUrl","ProductCard","Loader","jsxDEV","_jsxDEV","ProductDetail","_s","productId","product","setProduct","isLoading","setIsLoading","error","setError","fetchProduct","response","get","data","err","console","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/Local Admin/Desktop/amazon/Amazon-Clon-2024/amzon-clon-2024/src/Pages/ProductDetail/ProductDetail.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { productUrl } from '../../Api/endPoints'; // Adjust the path as necessary\r\nimport ProductCard from '../../Components/Product/ProductCard';\r\nimport Loader from '../../Components/Loader/Loader';\r\n\r\nfunction ProductDetail() {\r\n    const { productId } = useParams(); // Get product ID from URL\r\n    const [product, setProduct] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchProduct = async () => {\r\n            setIsLoading(true);\r\n            try {\r\n                const response = await axios.get(`${productUrl}/products/${productId}`);\r\n                setProduct(response.data);\r\n            } catch (err) {\r\n                console.error(\"Error fetching product:\", err);\r\n                setError(\"Failed to fetch product details.\");\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchProduct();\r\n    }, [productId]);\r\n\r\n    if (isLoading) {\r\n        return <Loader />;\r\n    }\r\n\r\n    if (error) {\r\n        return <p>{error}</p>;\r\n    }\r\n\r\n    if (!product) {\r\n        return <p>Product not found.</p>;\r\n    }\r\n\r\n    return (\r\n        <ProductCard product={product} />\r\n    );\r\n}\r\n\r\nexport default ProductDetail;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,qBAAqB,CAAC,CAAC;AAClD,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,OAAOC,MAAM,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAU,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,CAAC;EACnC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMkB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7BH,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACA,MAAMI,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,GAAGhB,UAAU,aAAaO,SAAS,EAAE,CAAC;QACvEE,UAAU,CAACM,QAAQ,CAACE,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACP,KAAK,CAAC,yBAAyB,EAAEM,GAAG,CAAC;QAC7CL,QAAQ,CAAC,kCAAkC,CAAC;MAChD,CAAC,SAAS;QACNF,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAEDG,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;EAEf,IAAIG,SAAS,EAAE;IACX,oBAAON,OAAA,CAACF,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrB;EAEA,IAAIX,KAAK,EAAE;IACP,oBAAOR,OAAA;MAAAoB,QAAA,EAAIZ;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACzB;EAEA,IAAI,CAACf,OAAO,EAAE;IACV,oBAAOJ,OAAA;MAAAoB,QAAA,EAAG;IAAkB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACpC;EAEA,oBACInB,OAAA,CAACH,WAAW;IAACO,OAAO,EAAEA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEzC;AAACjB,EAAA,CAtCQD,aAAa;EAAA,QACIP,SAAS;AAAA;AAAA2B,EAAA,GAD1BpB,aAAa;AAwCtB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}