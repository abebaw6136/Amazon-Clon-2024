{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Local Admin\\\\Desktop\\\\amazon\\\\Amazon-Clon-2024\\\\amzon-clon-2024\\\\src\\\\Pages\\\\ProductDetail.jsx\\\\ProductDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport classes from './ProductDetail.module.css';\nimport LayOut from '../../Components/LayOut';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { productUrl } from '../../Api/endPoints';\nimport ProductCard from '../../Components/Product/ProductCard'; // Adjust based on your actual file structure\nimport Loader from '../../Components/loader/loder'; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductDetail() {\n  _s();\n  const {\n    productId\n  } = useParams();\n  const [product, setProduct] = useState(null); // Correct the state variable to product\n  const [loading, setLoading] = useState(true); // Loading state\n\n  useEffect(() => {\n    axios.get(`${productUrl}/products/${productId}`) // Use backticks for string interpolation\n    .then(res => {\n      setProduct(res.data); // Set the product data\n      setLoading(false); // Set loading to false after data is fetched\n    }).catch(err => {\n      console.log(err);\n      setLoading(false); // Ensure loading is stopped on error\n    });\n  }, [productId]); // Add productId as a dependency\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this); // Show loader while loading\n  }\n  return /*#__PURE__*/_jsxDEV(LayOut, {\n    children: product ?\n    /*#__PURE__*/\n    // Check if product data is available\n    _jsxDEV(ProductCard, {\n      product: product\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Product not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) // Handle case where product is not found\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductDetail, \"nNtaK6lyujh7ExK4iamQG/1HwOQ=\", false, function () {\n  return [useParams];\n});\n_c = ProductDetail;\nexport default ProductDetail;\nvar _c;\n$RefreshReg$(_c, \"ProductDetail\");","map":{"version":3,"names":["React","useEffect","useState","classes","LayOut","useParams","axios","productUrl","ProductCard","Loader","jsxDEV","_jsxDEV","ProductDetail","_s","productId","product","setProduct","loading","setLoading","get","then","res","data","catch","err","console","log","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/Local Admin/Desktop/amazon/Amazon-Clon-2024/amzon-clon-2024/src/Pages/ProductDetail.jsx/ProductDetail.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport classes from './ProductDetail.module.css';\r\nimport LayOut from '../../Components/LayOut';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { productUrl } from '../../Api/endPoints';\r\nimport ProductCard from '../../Components/Product/ProductCard'; // Adjust based on your actual file structure\r\nimport Loader from '../../Components/loader/loder'; // Ensure this path is correct\r\n\r\nfunction ProductDetail() {\r\n  const { productId } = useParams();\r\n  const [product, setProduct] = useState(null); // Correct the state variable to product\r\n  const [loading, setLoading] = useState(true); // Loading state\r\n\r\n  useEffect(() => {\r\n    axios.get(`${productUrl}/products/${productId}`) // Use backticks for string interpolation\r\n      .then((res) => {\r\n        setProduct(res.data); // Set the product data\r\n        setLoading(false); // Set loading to false after data is fetched\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false); // Ensure loading is stopped on error\r\n      });\r\n  }, [productId]); // Add productId as a dependency\r\n\r\n  if (loading) {\r\n    return <Loader />; // Show loader while loading\r\n  }\r\n\r\n  return (\r\n    <LayOut>\r\n      {product ? ( // Check if product data is available\r\n        <ProductCard \r\n          product={product}\r\n        />\r\n      ) : (\r\n        <p>Product not found.</p> // Handle case where product is not found\r\n      )}\r\n    </LayOut>\r\n  );\r\n}\r\n\r\nexport default ProductDetail;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,4BAA4B;AAChD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,qBAAqB;AAChD,OAAOC,WAAW,MAAM,sCAAsC,CAAC,CAAC;AAChE,OAAOC,MAAM,MAAM,+BAA+B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAU,CAAC,GAAGT,SAAS,CAAC,CAAC;EACjC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACdK,KAAK,CAACa,GAAG,CAAC,GAAGZ,UAAU,aAAaO,SAAS,EAAE,CAAC,CAAC;IAAA,CAC9CM,IAAI,CAAEC,GAAG,IAAK;MACbL,UAAU,CAACK,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;MACtBJ,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDK,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB,IAAIG,OAAO,EAAE;IACX,oBAAON,OAAA,CAACF,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EACrB;EAEA,oBACEnB,OAAA,CAACP,MAAM;IAAA2B,QAAA,EACJhB,OAAO;IAAA;IAAK;IACXJ,OAAA,CAACH,WAAW;MACVO,OAAO,EAAEA;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,gBAEFnB,OAAA;MAAAoB,QAAA,EAAG;IAAkB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;EAC3B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb;AAACjB,EAAA,CAhCQD,aAAa;EAAA,QACEP,SAAS;AAAA;AAAA2B,EAAA,GADxBpB,aAAa;AAkCtB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}