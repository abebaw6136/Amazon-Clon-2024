{"ast":null,"code":"{/*import React, {useEffect,useState} from 'react';\r\n import axios from 'axios'\r\n import ProductCard from './ProductCard';\r\n \n \n \n \n function Product() {\r\n    const [products, setProducts] = useState([]); // Initialize as an empty array\r\n \n    useEffect(() => {\r\n        axios.get(\"https://fakestoreapi.com/products\")\r\n            .then((res) => {\r\n                setProducts(res.data); // Ensure there's a semicolon here\r\n            })\r\n            .catch((err) => {\r\n                console.log(err); // Fixed typo here\r\n            });\r\n    }, []);\r\n \n    return (\r\n        <section>\r\n            {products.map(singleProduct => (\r\n                <ProductCard product={singleProduct} key={singleProduct.id} />\r\n            ))}\r\n        </section>\r\n    );\r\n }\r\n \n export default Product;*/}","map":{"version":3,"names":[],"sources":["C:/Users/Local Admin/Desktop/amazon/Amazon-Clon-2024/amzon-clon-2024/src/Components/Product/Product.jsx"],"sourcesContent":["\r\n{/*import React, {useEffect,useState} from 'react';\r\nimport axios from 'axios'\r\nimport ProductCard from './ProductCard';\r\n\r\n\r\n\r\n\r\nfunction Product() {\r\n    const [products, setProducts] = useState([]); // Initialize as an empty array\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://fakestoreapi.com/products\")\r\n            .then((res) => {\r\n                setProducts(res.data); // Ensure there's a semicolon here\r\n            })\r\n            .catch((err) => {\r\n                console.log(err); // Fixed typo here\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <section>\r\n            {products.map(singleProduct => (\r\n                <ProductCard product={singleProduct} key={singleProduct.id} />\r\n            ))}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Product;*/}\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BA7BC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}